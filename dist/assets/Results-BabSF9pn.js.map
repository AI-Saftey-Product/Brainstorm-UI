{"version":3,"file":"Results-BabSF9pn.js","sources":["../../node_modules/@mui/material/Accordion/AccordionContext.js","../../node_modules/@mui/material/Accordion/accordionClasses.js","../../node_modules/@mui/material/Accordion/Accordion.js","../../node_modules/@mui/material/AccordionDetails/accordionDetailsClasses.js","../../node_modules/@mui/material/AccordionDetails/AccordionDetails.js","../../node_modules/@mui/material/AccordionSummary/accordionSummaryClasses.js","../../node_modules/@mui/material/AccordionSummary/AccordionSummary.js","../../node_modules/@mui/icons-material/esm/ExpandMore.js","../../node_modules/@mui/icons-material/esm/PictureAsPdf.js","../../node_modules/@mui/icons-material/esm/GetApp.js","../../node_modules/@mui/icons-material/esm/FileCopy.js","../../node_modules/@mui/icons-material/esm/Insights.js","../../node_modules/@mui/icons-material/esm/BugReport.js","../../src/utils/formatters.js","../../src/components/widgets/TestResultTable.jsx","../../src/pages/Results.jsx"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\n\n/**\n * @ignore - internal component.\n * @type {React.Context<{} | {expanded: boolean, disabled: boolean, toggle: () => void}>}\n */\nconst AccordionContext = /*#__PURE__*/React.createContext({});\nif (process.env.NODE_ENV !== 'production') {\n  AccordionContext.displayName = 'AccordionContext';\n}\nexport default AccordionContext;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordion', slot);\n}\nconst accordionClasses = generateUtilityClasses('MuiAccordion', ['root', 'heading', 'rounded', 'expanded', 'disabled', 'gutters', 'region']);\nexport default accordionClasses;","'use client';\n\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport chainPropTypes from '@mui/utils/chainPropTypes';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Collapse from \"../Collapse/index.js\";\nimport Paper from \"../Paper/index.js\";\nimport AccordionContext from \"./AccordionContext.js\";\nimport useControlled from \"../utils/useControlled.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport accordionClasses, { getAccordionUtilityClass } from \"./accordionClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    square,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', !square && 'rounded', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    heading: ['heading'],\n    region: ['region']\n  };\n  return composeClasses(slots, getAccordionUtilityClass, classes);\n};\nconst AccordionRoot = styled(Paper, {\n  name: 'MuiAccordion',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${accordionClasses.region}`]: styles.region\n    }, styles.root, !ownerState.square && styles.rounded, !ownerState.disableGutters && styles.gutters];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    position: 'relative',\n    transition: theme.transitions.create(['margin'], transition),\n    overflowAnchor: 'none',\n    // Keep the same scrolling position\n    '&::before': {\n      position: 'absolute',\n      left: 0,\n      top: -1,\n      right: 0,\n      height: 1,\n      content: '\"\"',\n      opacity: 1,\n      backgroundColor: (theme.vars || theme).palette.divider,\n      transition: theme.transitions.create(['opacity', 'background-color'], transition)\n    },\n    '&:first-of-type': {\n      '&::before': {\n        display: 'none'\n      }\n    },\n    [`&.${accordionClasses.expanded}`]: {\n      '&::before': {\n        opacity: 0\n      },\n      '&:first-of-type': {\n        marginTop: 0\n      },\n      '&:last-of-type': {\n        marginBottom: 0\n      },\n      '& + &': {\n        '&::before': {\n          display: 'none'\n        }\n      }\n    },\n    [`&.${accordionClasses.disabled}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.disabledBackground\n    }\n  };\n}), memoTheme(({\n  theme\n}) => ({\n  variants: [{\n    props: props => !props.square,\n    style: {\n      borderRadius: 0,\n      '&:first-of-type': {\n        borderTopLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderTopRightRadius: (theme.vars || theme).shape.borderRadius\n      },\n      '&:last-of-type': {\n        borderBottomLeftRadius: (theme.vars || theme).shape.borderRadius,\n        borderBottomRightRadius: (theme.vars || theme).shape.borderRadius,\n        // Fix a rendering issue on Edge\n        '@supports (-ms-ime-align: auto)': {\n          borderBottomLeftRadius: 0,\n          borderBottomRightRadius: 0\n        }\n      }\n    }\n  }, {\n    props: props => !props.disableGutters,\n    style: {\n      [`&.${accordionClasses.expanded}`]: {\n        margin: '16px 0'\n      }\n    }\n  }]\n})));\nconst AccordionHeading = styled('h3', {\n  name: 'MuiAccordion',\n  slot: 'Heading',\n  overridesResolver: (props, styles) => styles.heading\n})({\n  all: 'unset'\n});\nconst Accordion = /*#__PURE__*/React.forwardRef(function Accordion(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordion'\n  });\n  const {\n    children: childrenProp,\n    className,\n    defaultExpanded = false,\n    disabled = false,\n    disableGutters = false,\n    expanded: expandedProp,\n    onChange,\n    square = false,\n    slots = {},\n    slotProps = {},\n    TransitionComponent: TransitionComponentProp,\n    TransitionProps: TransitionPropsProp,\n    ...other\n  } = props;\n  const [expanded, setExpandedState] = useControlled({\n    controlled: expandedProp,\n    default: defaultExpanded,\n    name: 'Accordion',\n    state: 'expanded'\n  });\n  const handleChange = React.useCallback(event => {\n    setExpandedState(!expanded);\n    if (onChange) {\n      onChange(event, !expanded);\n    }\n  }, [expanded, onChange, setExpandedState]);\n  const [summary, ...children] = React.Children.toArray(childrenProp);\n  const contextValue = React.useMemo(() => ({\n    expanded,\n    disabled,\n    disableGutters,\n    toggle: handleChange\n  }), [expanded, disabled, disableGutters, handleChange]);\n  const ownerState = {\n    ...props,\n    square,\n    disabled,\n    disableGutters,\n    expanded\n  };\n  const classes = useUtilityClasses(ownerState);\n  const backwardCompatibleSlots = {\n    transition: TransitionComponentProp,\n    ...slots\n  };\n  const backwardCompatibleSlotProps = {\n    transition: TransitionPropsProp,\n    ...slotProps\n  };\n  const externalForwardedProps = {\n    slots: backwardCompatibleSlots,\n    slotProps: backwardCompatibleSlotProps\n  };\n  const [AccordionHeadingSlot, accordionProps] = useSlot('heading', {\n    elementType: AccordionHeading,\n    externalForwardedProps,\n    className: classes.heading,\n    ownerState\n  });\n  const [TransitionSlot, transitionProps] = useSlot('transition', {\n    elementType: Collapse,\n    externalForwardedProps,\n    ownerState\n  });\n  return /*#__PURE__*/_jsxs(AccordionRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    square: square,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionHeadingSlot, {\n      ...accordionProps,\n      children: /*#__PURE__*/_jsx(AccordionContext.Provider, {\n        value: contextValue,\n        children: summary\n      })\n    }), /*#__PURE__*/_jsx(TransitionSlot, {\n      in: expanded,\n      timeout: \"auto\",\n      ...transitionProps,\n      children: /*#__PURE__*/_jsx(\"div\", {\n        \"aria-labelledby\": summary.props.id,\n        id: summary.props['aria-controls'],\n        role: \"region\",\n        className: classes.region,\n        children: children\n      })\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Accordion.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: chainPropTypes(PropTypes.node.isRequired, props => {\n    const summary = React.Children.toArray(props.children)[0];\n    if (isFragment(summary)) {\n      return new Error(\"MUI: The Accordion doesn't accept a Fragment as a child. \" + 'Consider providing an array instead.');\n    }\n    if (! /*#__PURE__*/React.isValidElement(summary)) {\n      return new Error('MUI: Expected the first child of Accordion to be a valid element.');\n    }\n    return null;\n  }),\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, expands the accordion by default.\n   * @default false\n   */\n  defaultExpanded: PropTypes.bool,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, it removes the margin between two expanded accordion items and the increase of height.\n   * @default false\n   */\n  disableGutters: PropTypes.bool,\n  /**\n   * If `true`, expands the accordion, otherwise collapse it.\n   * Setting this prop enables control over the accordion.\n   */\n  expanded: PropTypes.bool,\n  /**\n   * Callback fired when the expand/collapse state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback. **Warning**: This is a generic event not a change event.\n   * @param {boolean} expanded The `expanded` state of the accordion.\n   */\n  onChange: PropTypes.func,\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    heading: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    transition: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    heading: PropTypes.elementType,\n    transition: PropTypes.elementType\n  }),\n  /**\n   * If `true`, rounded corners are disabled.\n   * @default false\n   */\n  square: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The component used for the transition.\n   * [Follow this guide](https://mui.com/material-ui/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @deprecated Use `slots.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](https://reactcommunity.org/react-transition-group/transition/) component.\n   * @deprecated Use `slotProps.transition` instead. This prop will be removed in v7. See [Migrating from deprecated APIs](/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Accordion;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionDetailsUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionDetails', slot);\n}\nconst accordionDetailsClasses = generateUtilityClasses('MuiAccordionDetails', ['root']);\nexport default accordionDetailsClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport { getAccordionDetailsUtilityClass } from \"./accordionDetailsClasses.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root']\n  };\n  return composeClasses(slots, getAccordionDetailsUtilityClass, classes);\n};\nconst AccordionDetailsRoot = styled('div', {\n  name: 'MuiAccordionDetails',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => ({\n  padding: theme.spacing(1, 2, 2)\n})));\nconst AccordionDetails = /*#__PURE__*/React.forwardRef(function AccordionDetails(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionDetails'\n  });\n  const {\n    className,\n    ...other\n  } = props;\n  const ownerState = props;\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(AccordionDetailsRoot, {\n    className: clsx(classes.root, className),\n    ref: ref,\n    ownerState: ownerState,\n    ...other\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionDetails.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionDetails;","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getAccordionSummaryUtilityClass(slot) {\n  return generateUtilityClass('MuiAccordionSummary', slot);\n}\nconst accordionSummaryClasses = generateUtilityClasses('MuiAccordionSummary', ['root', 'expanded', 'focusVisible', 'disabled', 'gutters', 'contentGutters', 'content', 'expandIconWrapper']);\nexport default accordionSummaryClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport AccordionContext from \"../Accordion/AccordionContext.js\";\nimport accordionSummaryClasses, { getAccordionSummaryUtilityClass } from \"./accordionSummaryClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    expanded,\n    disabled,\n    disableGutters\n  } = ownerState;\n  const slots = {\n    root: ['root', expanded && 'expanded', disabled && 'disabled', !disableGutters && 'gutters'],\n    focusVisible: ['focusVisible'],\n    content: ['content', expanded && 'expanded', !disableGutters && 'contentGutters'],\n    expandIconWrapper: ['expandIconWrapper', expanded && 'expanded']\n  };\n  return composeClasses(slots, getAccordionSummaryUtilityClass, classes);\n};\nconst AccordionSummaryRoot = styled(ButtonBase, {\n  name: 'MuiAccordionSummary',\n  slot: 'Root',\n  overridesResolver: (props, styles) => styles.root\n})(memoTheme(({\n  theme\n}) => {\n  const transition = {\n    duration: theme.transitions.duration.shortest\n  };\n  return {\n    display: 'flex',\n    width: '100%',\n    minHeight: 48,\n    padding: theme.spacing(0, 2),\n    transition: theme.transitions.create(['min-height', 'background-color'], transition),\n    [`&.${accordionSummaryClasses.focusVisible}`]: {\n      backgroundColor: (theme.vars || theme).palette.action.focus\n    },\n    [`&.${accordionSummaryClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity\n    },\n    [`&:hover:not(.${accordionSummaryClasses.disabled})`]: {\n      cursor: 'pointer'\n    },\n    variants: [{\n      props: props => !props.disableGutters,\n      style: {\n        [`&.${accordionSummaryClasses.expanded}`]: {\n          minHeight: 64\n        }\n      }\n    }]\n  };\n}));\nconst AccordionSummaryContent = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'Content',\n  overridesResolver: (props, styles) => styles.content\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  textAlign: 'start',\n  flexGrow: 1,\n  margin: '12px 0',\n  variants: [{\n    props: props => !props.disableGutters,\n    style: {\n      transition: theme.transitions.create(['margin'], {\n        duration: theme.transitions.duration.shortest\n      }),\n      [`&.${accordionSummaryClasses.expanded}`]: {\n        margin: '20px 0'\n      }\n    }\n  }]\n})));\nconst AccordionSummaryExpandIconWrapper = styled('span', {\n  name: 'MuiAccordionSummary',\n  slot: 'ExpandIconWrapper',\n  overridesResolver: (props, styles) => styles.expandIconWrapper\n})(memoTheme(({\n  theme\n}) => ({\n  display: 'flex',\n  color: (theme.vars || theme).palette.action.active,\n  transform: 'rotate(0deg)',\n  transition: theme.transitions.create('transform', {\n    duration: theme.transitions.duration.shortest\n  }),\n  [`&.${accordionSummaryClasses.expanded}`]: {\n    transform: 'rotate(180deg)'\n  }\n})));\nconst AccordionSummary = /*#__PURE__*/React.forwardRef(function AccordionSummary(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiAccordionSummary'\n  });\n  const {\n    children,\n    className,\n    expandIcon,\n    focusVisibleClassName,\n    onClick,\n    ...other\n  } = props;\n  const {\n    disabled = false,\n    disableGutters,\n    expanded,\n    toggle\n  } = React.useContext(AccordionContext);\n  const handleChange = event => {\n    if (toggle) {\n      toggle(event);\n    }\n    if (onClick) {\n      onClick(event);\n    }\n  };\n  const ownerState = {\n    ...props,\n    expanded,\n    disabled,\n    disableGutters\n  };\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(AccordionSummaryRoot, {\n    focusRipple: false,\n    disableRipple: true,\n    disabled: disabled,\n    \"aria-expanded\": expanded,\n    className: clsx(classes.root, className),\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    onClick: handleChange,\n    ref: ref,\n    ownerState: ownerState,\n    ...other,\n    children: [/*#__PURE__*/_jsx(AccordionSummaryContent, {\n      className: classes.content,\n      ownerState: ownerState,\n      children: children\n    }), expandIcon && /*#__PURE__*/_jsx(AccordionSummaryExpandIconWrapper, {\n      className: classes.expandIconWrapper,\n      ownerState: ownerState,\n      children: expandIcon\n    })]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? AccordionSummary.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The icon to display as the expand indicator.\n   */\n  expandIcon: PropTypes.node,\n  /**\n   * This prop can help identify which element has keyboard focus.\n   * The class name will be applied when the element gains the focus through keyboard interaction.\n   * It's a polyfill for the [CSS :focus-visible selector](https://drafts.csswg.org/selectors-4/#the-focus-visible-pseudo).\n   * The rationale for using this feature [is explained here](https://github.com/WICG/focus-visible/blob/HEAD/explainer.md).\n   * A [polyfill can be used](https://github.com/WICG/focus-visible) to apply a `focus-visible` class to other components\n   * if needed.\n   */\n  focusVisibleClassName: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default AccordionSummary;","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16.59 8.59 12 13.17 7.41 8.59 6 10l6 6 6-6z\"\n}), 'ExpandMore');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2m-8.5 7.5c0 .83-.67 1.5-1.5 1.5H9v2H7.5V7H10c.83 0 1.5.67 1.5 1.5zm5 2c0 .83-.67 1.5-1.5 1.5h-2.5V7H15c.83 0 1.5.67 1.5 1.5zm4-3H19v1h1.5V11H19v2h-1.5V7h3zM9 9.5h1v-1H9zM4 6H2v14c0 1.1.9 2 2 2h14v-2H4zm10 5.5h1v-3h-1z\"\n}), 'PictureAsPdf');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 9h-4V3H9v6H5l7 7zM5 18v2h14v-2z\"\n}), 'GetApp');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm-1 4 6 6v10c0 1.1-.9 2-2 2H7.99C6.89 23 6 22.1 6 21l.01-14c0-1.1.89-2 1.99-2zm-1 7h5.5L14 6.5z\"\n}), 'FileCopy');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon([/*#__PURE__*/_jsx(\"path\", {\n  d: \"M21 8c-1.45 0-2.26 1.44-1.93 2.51l-3.55 3.56c-.3-.09-.74-.09-1.04 0l-2.55-2.55C12.27 10.45 11.46 9 10 9c-1.45 0-2.27 1.44-1.93 2.52l-4.56 4.55C2.44 15.74 1 16.55 1 18c0 1.1.9 2 2 2 1.45 0 2.26-1.44 1.93-2.51l4.55-4.56c.3.09.74.09 1.04 0l2.55 2.55C12.73 16.55 13.54 18 15 18c1.45 0 2.27-1.44 1.93-2.52l3.56-3.55c1.07.33 2.51-.48 2.51-1.93 0-1.1-.9-2-2-2\"\n}, \"0\"), /*#__PURE__*/_jsx(\"path\", {\n  d: \"m15 9 .94-2.07L18 6l-2.06-.93L15 3l-.92 2.07L12 6l2.08.93zM3.5 11 4 9l2-.5L4 8l-.5-2L3 8l-2 .5L3 9z\"\n}, \"1\")], 'Insights');","\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M20 8h-2.81c-.45-.78-1.07-1.45-1.82-1.96L17 4.41 15.59 3l-2.17 2.17C12.96 5.06 12.49 5 12 5s-.96.06-1.41.17L8.41 3 7 4.41l1.62 1.63C7.88 6.55 7.26 7.22 6.81 8H4v2h2.09c-.05.33-.09.66-.09 1v1H4v2h2v1c0 .34.04.67.09 1H4v2h2.81c1.04 1.79 2.97 3 5.19 3s4.15-1.21 5.19-3H20v-2h-2.09c.05-.33.09-.66.09-1v-1h2v-2h-2v-1c0-.34-.04-.67-.09-1H20zm-6 8h-4v-2h4zm0-4h-4v-2h4z\"\n}), 'BugReport');","/**\r\n * Utility functions for formatting data throughout the application\r\n */\r\n\r\n/**\r\n * Format a timestamp into a human-readable date and time string\r\n * @param {string} timestamp - ISO timestamp string\r\n * @returns {string} Formatted date and time\r\n */\r\nexport const formatTimestamp = (timestamp) => {\r\n    if (!timestamp) return 'N/A';\r\n    \r\n    try {\r\n      const date = new Date(timestamp);\r\n      return date.toLocaleString('en-US', {\r\n        year: 'numeric',\r\n        month: 'short',\r\n        day: 'numeric',\r\n        hour: '2-digit',\r\n        minute: '2-digit',\r\n        second: '2-digit'\r\n      });\r\n    } catch (error) {\r\n      console.error('Error formatting timestamp:', error);\r\n      return timestamp;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Format a number as a percentage\r\n   * @param {number} value - Value to format (0-1)\r\n   * @param {number} decimals - Number of decimal places\r\n   * @returns {string} Formatted percentage\r\n   */\r\n  export const formatPercentage = (value, decimals = 1) => {\r\n    if (value === undefined || value === null) return 'N/A';\r\n    return `${(value * 100).toFixed(decimals)}%`;\r\n  };\r\n  \r\n  /**\r\n   * Format a number with commas as thousands separators\r\n   * @param {number} value - Value to format\r\n   * @returns {string} Formatted number\r\n   */\r\n  export const formatNumber = (value) => {\r\n    if (value === undefined || value === null) return 'N/A';\r\n    return value.toLocaleString('en-US');\r\n  };\r\n  \r\n  /**\r\n   * Format a duration in milliseconds to a human-readable string\r\n   * @param {number} ms - Duration in milliseconds\r\n   * @returns {string} Formatted duration\r\n   */\r\n  export const formatDuration = (ms) => {\r\n    if (ms === undefined || ms === null) return 'N/A';\r\n    \r\n    if (ms < 1000) {\r\n      return `${ms}ms`;\r\n    } else if (ms < 60000) {\r\n      return `${(ms / 1000).toFixed(2)}s`;\r\n    } else {\r\n      const minutes = Math.floor(ms / 60000);\r\n      const seconds = ((ms % 60000) / 1000).toFixed(1);\r\n      return `${minutes}m ${seconds}s`;\r\n    }\r\n  };\r\n  \r\n  /**\r\n   * Truncate long text with ellipsis\r\n   * @param {string} text - Text to truncate\r\n   * @param {number} maxLength - Maximum length before truncation\r\n   * @returns {string} Truncated text\r\n   */\r\n  export const truncateText = (text, maxLength = 100) => {\r\n    if (!text) return '';\r\n    if (text.length <= maxLength) return text;\r\n    return `${text.substring(0, maxLength)}...`;\r\n  };","import React, { useState } from 'react';\r\nimport {\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Paper,\r\n  IconButton,\r\n  Collapse,\r\n  Box,\r\n  Typography,\r\n  Chip,\r\n} from '@mui/material';\r\nimport KeyboardArrowDownIcon from '@mui/icons-material/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@mui/icons-material/KeyboardArrowUp';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport ComplianceScoreGauge from '../common/ComplianceScoreGauge';\r\nimport StatusChip from '../common/StatusChip';\r\nimport SeverityChip from '../common/SeverityChip';\r\nimport CategoryChip from '../common/CategoryChip.jsx';\r\nimport { formatTimestamp } from '../../utils/formatters';\r\n\r\nconst TestResultRow = ({ item }) => {\r\n  const [open, setOpen] = useState(false);\r\n  \r\n  return (\r\n    <>\r\n      <TableRow hover>\r\n        <TableCell>\r\n          <IconButton\r\n            aria-label=\"expand row\"\r\n            size=\"small\"\r\n            onClick={() => setOpen(!open)}\r\n          >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell>{item.test.name}</TableCell>\r\n        <TableCell>\r\n          <CategoryChip category={item.test.category} />\r\n        </TableCell>\r\n        <TableCell>\r\n          <SeverityChip severity={item.test.severity} />\r\n        </TableCell>\r\n        <TableCell>\r\n          <StatusChip status={item.result.pass ? 'passed' : 'failed'} />\r\n        </TableCell>\r\n        <TableCell align=\"right\">\r\n          <ComplianceScoreGauge \r\n            score={item.result.score * 100} \r\n            size={40} \r\n            showPercent={false} \r\n          />\r\n        </TableCell>\r\n      </TableRow>\r\n      \r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box sx={{ margin: 1, p: 2 }}>\r\n              <Typography variant=\"subtitle2\" gutterBottom component=\"div\">\r\n                Test Details\r\n              </Typography>\r\n              <Box sx={{ mb: 2 }}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  {item.test.description}\r\n                </Typography>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 1 }}>\r\n                  Timestamp: {formatTimestamp(item.result.timestamp)}\r\n                </Typography>\r\n              </Box>\r\n              \r\n              {!item.result.pass && item.result.recommendations && (\r\n                <Box sx={{ \r\n                  p: 2, \r\n                  bgcolor: 'rgba(244, 67, 54, 0.05)', \r\n                  borderRadius: 1,\r\n                  borderLeft: '3px solid #f44336',\r\n                }}>\r\n                  <Typography variant=\"subtitle2\" sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <WarningIcon fontSize=\"small\" sx={{ mr: 1, color: 'error.main' }} />\r\n                    Issues Detected\r\n                  </Typography>\r\n                  <Box component=\"ul\" sx={{ mt: 1, mb: 0, pl: 2 }}>\r\n                    {item.result.recommendations.map((rec, idx) => (\r\n                      <Typography component=\"li\" variant=\"body2\" key={idx} sx={{ mb: 0.5 }}>\r\n                        {rec}\r\n                      </Typography>\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n              \r\n              {item.result.metrics && (\r\n                <Box sx={{ mt: 2 }}>\r\n                  <Typography variant=\"subtitle2\" gutterBottom>\r\n                    Metrics\r\n                  </Typography>\r\n                  <Box sx={{ display: 'flex', flexWrap: 'wrap', gap: 1 }}>\r\n                    {Object.entries(item.result.metrics).map(([key, value]) => (\r\n                      <Chip\r\n                        key={key}\r\n                        label={`${key.replace(/_/g, ' ')}: ${typeof value === 'number' ? value.toFixed(2) : value}`}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      />\r\n                    ))}\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n};\r\n\r\nconst TestResultTable = ({ results, filters = {} }) => {\r\n  // Apply filters if provided\r\n  const filteredResults = Object.values(results).filter(item => {\r\n    if (filters.category && filters.category !== 'all' && item.test.category !== filters.category) {\r\n      return false;\r\n    }\r\n    if (filters.status && filters.status !== 'all') {\r\n      const isPassed = item.result.pass;\r\n      if ((filters.status === 'passed' && !isPassed) || (filters.status === 'failed' && isPassed)) {\r\n        return false;\r\n      }\r\n    }\r\n    if (filters.severity && filters.severity !== 'all' && item.test.severity !== filters.severity) {\r\n      return false;\r\n    }\r\n    return true;\r\n  });\r\n  \r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"test results table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell width={50} />\r\n            <TableCell>Test Name</TableCell>\r\n            <TableCell width={140}>Category</TableCell>\r\n            <TableCell width={100}>Severity</TableCell>\r\n            <TableCell width={100}>Status</TableCell>\r\n            <TableCell width={80} align=\"right\">Score</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filteredResults.length > 0 ? (\r\n            filteredResults.map((item) => (\r\n              <TestResultRow key={item.test.id} item={item} />\r\n            ))\r\n          ) : (\r\n            <TableRow>\r\n              <TableCell colSpan={6} align=\"center\" sx={{ py: 3 }}>\r\n                <Typography variant=\"body1\" color=\"textSecondary\">\r\n                  No test results match the current filters.\r\n                </Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          )}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n};\r\n\r\nexport default TestResultTable;","import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Paper,\r\n  Tabs,\r\n  Tab,\r\n  Grid,\r\n  Card,\r\n  CardContent,\r\n  Button,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Accordion,\r\n  AccordionSummary,\r\n  AccordionDetails,\r\n  CircularProgress,\r\n  Divider,\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogActions,\r\n  FormControl,\r\n  FormControlLabel,\r\n  FormGroup,\r\n  Select,\r\n  InputLabel,\r\n  Checkbox,\r\n  Container,\r\n  Alert,\r\n} from '@mui/material';\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport BarChartIcon from '@mui/icons-material/BarChart';\r\nimport PictureAsPdfIcon from '@mui/icons-material/PictureAsPdf';\r\nimport CodeIcon from '@mui/icons-material/Code';\r\nimport GetAppIcon from '@mui/icons-material/GetApp';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport DescriptionIcon from '@mui/icons-material/Description';\r\nimport WarningIcon from '@mui/icons-material/Warning';\r\nimport InsightsIcon from '@mui/icons-material/Insights';\r\nimport BugReportIcon from '@mui/icons-material/BugReport';\r\nimport RestartAltIcon from '@mui/icons-material/RestartAlt';\r\nimport { useAppContext } from '../context/AppContext';\r\nimport { TEST_CATEGORIES } from '../constants/testCategories';\r\nimport ComplianceScoreGauge from '../components/common/ComplianceScoreGauge';\r\nimport StatusChip from '../components/common/StatusChip';\r\nimport SeverityChip from '../components/common/SeverityChip';\r\nimport CategoryChip from '../components/common/CategoryChip.jsx';\r\nimport ProgressBar from '../components/common/ProgressBar';\r\nimport TestResultTable from '../components/widgets/TestResultTable';\r\n\r\nconst ResultsPage = () => {\r\n  const navigate = useNavigate();\r\n  const { testResults, complianceScores, selectedTests } = useAppContext();\r\n  \r\n  const [currentTab, setCurrentTab] = useState(0);\r\n  const [categoryExpanded, setCategoryExpanded] = useState({});\r\n  const [exportDialogOpen, setExportDialogOpen] = useState(false);\r\n  const [exportFormat, setExportFormat] = useState('PDF');\r\n  const [exportType, setExportType] = useState('Full Compliance Report');\r\n  const [exportOptions, setExportOptions] = useState({\r\n    testDetails: true,\r\n    remediationSuggestions: true,\r\n    screenshots: false,\r\n    apiLogs: false,\r\n    configSettings: true\r\n  });\r\n  const [exportProgress, setExportProgress] = useState(0);\r\n  const [exporting, setExporting] = useState(false);\r\n  const [menuAnchorEl, setMenuAnchorEl] = useState(null);\r\n  const [filterCategory, setFilterCategory] = useState('all');\r\n  const [filterStatus, setFilterStatus] = useState('all');\r\n  const [filterSeverity, setFilterSeverity] = useState('all');\r\n  \r\n  const handleMenuOpen = (event) => {\r\n    setMenuAnchorEl(event.currentTarget);\r\n  };\r\n  \r\n  const handleMenuClose = () => {\r\n    setMenuAnchorEl(null);\r\n  };\r\n  \r\n  const handleTabChange = (event, newValue) => {\r\n    setCurrentTab(newValue);\r\n  };\r\n  \r\n  const toggleCategoryExpanded = (category) => {\r\n    setCategoryExpanded(prev => ({\r\n      ...prev,\r\n      [category]: !prev[category]\r\n    }));\r\n  };\r\n  \r\n  const openExportDialog = () => {\r\n    setExportDialogOpen(true);\r\n  };\r\n  \r\n  const closeExportDialog = () => {\r\n    setExportDialogOpen(false);\r\n  };\r\n  \r\n  const handleGenerateReport = () => {\r\n    setExporting(true);\r\n    \r\n    // Simulate export progress\r\n    let progress = 0;\r\n    const interval = setInterval(() => {\r\n      progress += 10;\r\n      setExportProgress(progress);\r\n      \r\n      if (progress >= 100) {\r\n        clearInterval(interval);\r\n        setTimeout(() => {\r\n          setExporting(false);\r\n          setExportProgress(0);\r\n          closeExportDialog();\r\n        }, 500);\r\n      }\r\n    }, 300);\r\n  };\r\n  \r\n  const handleExportOptionChange = (option) => {\r\n    setExportOptions(prev => ({\r\n      ...prev,\r\n      [option]: !prev[option]\r\n    }));\r\n  };\r\n  \r\n  // Calculate overall compliance score\r\n  const calculateOverallScore = () => {\r\n    if (!complianceScores || Object.keys(complianceScores).length === 0) return 0;\r\n    \r\n    const totalPassed = Object.values(complianceScores).reduce((sum, score) => sum + score.passed, 0);\r\n    const totalTests = Object.values(complianceScores).reduce((sum, score) => sum + score.total, 0);\r\n    \r\n    return totalTests > 0 ? (totalPassed / totalTests) * 100 : 0;\r\n  };\r\n  \r\n  const overallScore = calculateOverallScore();\r\n  \r\n  // Check if we have results to display\r\n  const hasResults = testResults && Object.keys(testResults).length > 0;\r\n  \r\n  // Statistics\r\n  const getStats = () => {\r\n    if (!hasResults) return { total: 0, passed: 0, failed: 0 };\r\n    \r\n    const total = Object.keys(testResults).length;\r\n    const passed = Object.values(testResults).filter(result => result.result.pass).length;\r\n    \r\n    return {\r\n      total,\r\n      passed,\r\n      failed: total - passed\r\n    };\r\n  };\r\n  \r\n  const stats = getStats();\r\n  \r\n  // Summary Tab Content\r\n  const renderSummaryTab = () => {\r\n    if (!hasResults) {\r\n      return (\r\n        <Box sx={{ textAlign: 'center', py: 4 }}>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            No test results available. Please run tests first.\r\n          </Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={() => navigate('/run-tests')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Go to Run Tests\r\n          </Button>\r\n        </Box>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <Box>\r\n        {/* Overall metrics */}\r\n        <Grid container spacing={3} sx={{ mb: 4 }}>\r\n          <Grid item xs={12} sm={4}>\r\n            <Card>\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Typography variant=\"body2\" color=\"textSecondary\">\r\n                  Total Tests\r\n                </Typography>\r\n                <Typography variant=\"h4\">\r\n                  {stats.total}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          <Grid item xs={6} sm={4}>\r\n            <Card sx={{ bgcolor: 'rgba(76, 175, 80, 0.08)' }}>\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Typography variant=\"body2\" color=\"success.main\">\r\n                  Tests Passed\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"success.main\">\r\n                  {stats.passed}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n          \r\n          <Grid item xs={6} sm={4}>\r\n            <Card sx={{ bgcolor: 'rgba(244, 67, 54, 0.08)' }}>\r\n              <CardContent sx={{ textAlign: 'center' }}>\r\n                <Typography variant=\"body2\" color=\"error.main\">\r\n                  Tests Failed\r\n                </Typography>\r\n                <Typography variant=\"h4\" color=\"error.main\">\r\n                  {stats.failed}\r\n                </Typography>\r\n              </CardContent>\r\n            </Card>\r\n          </Grid>\r\n        </Grid>\r\n        \r\n        {/* Overall compliance gauge */}\r\n        <Paper sx={{ p: 3, mb: 4, textAlign: 'center' }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Overall Compliance Score\r\n          </Typography>\r\n          <ComplianceScoreGauge \r\n            score={overallScore} \r\n            size={150}\r\n            sx={{ mb: 2 }}\r\n          />\r\n          <Typography>\r\n            {overallScore >= 80 ? 'Excellent compliance level' : \r\n             overallScore >= 50 ? 'Moderate compliance level - improvements needed' : \r\n             'Low compliance level - significant improvements required'}\r\n          </Typography>\r\n          \r\n          {stats.failed > 0 && (\r\n            <Box sx={{ mt: 2, p: 2, bgcolor: 'error.light', borderRadius: 1, color: 'error.contrastText' }}>\r\n              <Typography variant=\"subtitle2\">\r\n                <WarningIcon sx={{ mr: 1, verticalAlign: 'middle' }} />\r\n                {stats.failed} compliance issues need to be addressed\r\n              </Typography>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n        \r\n        {/* Category scores */}\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Compliance by Category\r\n        </Typography>\r\n        \r\n        <Grid container spacing={3}>\r\n          {Object.entries(complianceScores).map(([category, scores]) => {\r\n            const categoryScore = scores.total > 0 ? (scores.passed / scores.total) * 100 : 0;\r\n            \r\n            return (\r\n              <Grid item xs={12} sm={6} md={4} key={category}>\r\n                <Card>\r\n                  <CardContent>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                      <Box \r\n                        sx={{ \r\n                          width: 12, \r\n                          height: 12, \r\n                          borderRadius: '50%', \r\n                          bgcolor: TEST_CATEGORIES[category] || '#757575',\r\n                          mr: 1 \r\n                        }} \r\n                      />\r\n                      <Typography variant=\"subtitle1\">\r\n                        {category}\r\n                      </Typography>\r\n                    </Box>\r\n                    <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n                      <Typography variant=\"body2\" color=\"textSecondary\">\r\n                        Passed: {scores.passed}/{scores.total}\r\n                      </Typography>\r\n                      <Typography \r\n                        variant=\"h6\" \r\n                        sx={{ \r\n                          color: categoryScore >= 80 ? 'success.main' : \r\n                                 categoryScore >= 50 ? 'warning.main' : \r\n                                 'error.main'\r\n                        }}\r\n                      >\r\n                        {categoryScore.toFixed(1)}%\r\n                      </Typography>\r\n                    </Box>\r\n                    <ProgressBar value={categoryScore} sx={{ mt: 1 }} />\r\n                  </CardContent>\r\n                </Card>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n        \r\n        {/* Key insights */}\r\n        <Paper sx={{ p: 3, mt: 4 }}>\r\n          <Typography variant=\"h6\" gutterBottom sx={{ display: 'flex', alignItems: 'center' }}>\r\n            <InsightsIcon sx={{ mr: 1 }} />\r\n            Key Insights\r\n          </Typography>\r\n          <Divider sx={{ mb: 2 }} />\r\n          \r\n          <Grid container spacing={2}>\r\n            {/* Dynamic insights based on results */}\r\n            <Grid item xs={12}>\r\n              <Typography variant=\"body1\">\r\n                {overallScore >= 80 ? \r\n                  '• Your model demonstrates strong compliance across most categories.' : \r\n                  overallScore >= 50 ?\r\n                  '• Your model meets basic compliance requirements but needs improvements in specific areas.' :\r\n                  '• Your model has significant compliance gaps that need immediate attention.'}\r\n              </Typography>\r\n            </Grid>\r\n            \r\n            {/* Find the lowest scoring category */}\r\n            {Object.entries(complianceScores).length > 0 && (\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body1\">\r\n                  {(() => {\r\n                    const lowestCategory = Object.entries(complianceScores).reduce(\r\n                      (lowest, [category, scores]) => {\r\n                        const score = scores.total > 0 ? scores.passed / scores.total : 0;\r\n                        if (!lowest || score < lowest.score) {\r\n                          return { category, score };\r\n                        }\r\n                        return lowest;\r\n                      },\r\n                      null\r\n                    );\r\n                    \r\n                    if (lowestCategory) {\r\n                      const score = lowestCategory.score * 100;\r\n                      return `• The \"${lowestCategory.category}\" category has the lowest compliance score (${score.toFixed(1)}%) and should be prioritized for improvements.`;\r\n                    }\r\n                    return '';\r\n                  })()}\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n            \r\n            {/* Critical failures */}\r\n            {Object.values(testResults).some(item => \r\n              !item.result.pass && item.test.severity === 'critical'\r\n            ) && (\r\n              <Grid item xs={12}>\r\n                <Typography variant=\"body1\" color=\"error.main\">\r\n                  • Critical compliance issues were detected that should be addressed immediately.\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </Paper>\r\n      </Box>\r\n    );\r\n  };\r\n  \r\n  // Results by Category Tab Content\r\n  const renderCategoryTab = () => {\r\n    if (!hasResults) {\r\n      return (\r\n        <Box sx={{ textAlign: 'center', py: 4 }}>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            No test results available. Please run tests first.\r\n          </Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={() => navigate('/run-tests')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Go to Run Tests\r\n          </Button>\r\n        </Box>\r\n      );\r\n    }\r\n    \r\n    // Group results by category\r\n    const resultsByCategory = Object.values(testResults).reduce((acc, item) => {\r\n      const category = item.test.category;\r\n      if (!acc[category]) {\r\n        acc[category] = [];\r\n      }\r\n      acc[category].push(item);\r\n      return acc;\r\n    }, {});\r\n    \r\n    return (\r\n      <Box>\r\n        {Object.entries(resultsByCategory).map(([category, results]) => {\r\n          // Calculate category stats\r\n          const totalInCategory = results.length;\r\n          const passedInCategory = results.filter(item => item.result.pass).length;\r\n          const categoryScore = (passedInCategory / totalInCategory) * 100;\r\n          \r\n          return (\r\n            <Accordion \r\n              key={category} \r\n              expanded={categoryExpanded[category]} \r\n              onChange={() => toggleCategoryExpanded(category)}\r\n              sx={{ mb: 2 }}\r\n            >\r\n              <AccordionSummary\r\n                expandIcon={<ExpandMoreIcon />}\r\n                sx={{ \r\n                  bgcolor: 'rgba(0,0,0,0.03)',\r\n                  borderLeft: `4px solid ${TEST_CATEGORIES[category] || '#757575'}`\r\n                }}\r\n              >\r\n                <Box sx={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', width: '100%', pr: 2 }}>\r\n                  <Typography variant=\"subtitle1\">{category}</Typography>\r\n                  <Box sx={{ display: 'flex', alignItems: 'center' }}>\r\n                    <Chip \r\n                      label={`${passedInCategory}/${totalInCategory} passed`} \r\n                      size=\"small\" \r\n                      sx={{ mr: 2 }}\r\n                    />\r\n                    <Typography \r\n                      variant=\"subtitle1\" \r\n                      sx={{ \r\n                        color: categoryScore >= 80 ? 'success.main' : \r\n                               categoryScore >= 50 ? 'warning.main' : \r\n                               'error.main',\r\n                        fontWeight: 'bold'\r\n                      }}\r\n                    >\r\n                      {categoryScore.toFixed(1)}%\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </AccordionSummary>\r\n              <AccordionDetails>\r\n                <TestResultTable \r\n                  results={results.reduce((acc, item) => {\r\n                    acc[item.test.id] = item;\r\n                    return acc;\r\n                  }, {})}\r\n                />\r\n                \r\n                {/* Failed Tests Summary */}\r\n                {results.some(item => !item.result.pass) && (\r\n                  <Box sx={{ mt: 3 }}>\r\n                    <Typography variant=\"subtitle2\" gutterBottom>\r\n                      Issues requiring attention:\r\n                    </Typography>\r\n                    <Paper variant=\"outlined\" sx={{ p: 2 }}>\r\n                      {results\r\n                        .filter(item => !item.result.pass)\r\n                        .map((item, index) => (\r\n                          <Box key={item.test.id} sx={{ mb: index < results.filter(item => !item.result.pass).length - 1 ? 2 : 0 }}>\r\n                            <Typography variant=\"body2\" sx={{ fontWeight: 'bold', display: 'flex', alignItems: 'center' }}>\r\n                              <BugReportIcon sx={{ mr: 1, fontSize: 18, color: 'error.main' }} />\r\n                              {item.test.name} (<SeverityChip severity={item.test.severity} />)\r\n                            </Typography>\r\n                            {item.result.recommendations && item.result.recommendations.length > 0 && (\r\n                              <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 0.5, pl: 4 }}>\r\n                                Recommendation: {item.result.recommendations[0]}\r\n                              </Typography>\r\n                            )}\r\n                            {index < results.filter(item => !item.result.pass).length - 1 && (\r\n                              <Divider sx={{ my: 1 }} />\r\n                            )}\r\n                          </Box>\r\n                        ))}\r\n                    </Paper>\r\n                  </Box>\r\n                )}\r\n              </AccordionDetails>\r\n            </Accordion>\r\n          );\r\n        })}\r\n      </Box>\r\n    );\r\n  };\r\n  \r\n  // Detailed Results Tab Content\r\n  const renderDetailedTab = () => {\r\n    if (!hasResults) {\r\n      return (\r\n        <Box sx={{ textAlign: 'center', py: 4 }}>\r\n          <Typography variant=\"body1\" color=\"textSecondary\">\r\n            No test results available. Please run tests first.\r\n          </Typography>\r\n          <Button \r\n            variant=\"contained\" \r\n            color=\"primary\" \r\n            onClick={() => navigate('/run-tests')}\r\n            sx={{ mt: 2 }}\r\n          >\r\n            Go to Run Tests\r\n          </Button>\r\n        </Box>\r\n      );\r\n    }\r\n    \r\n    return (\r\n      <Box>\r\n        <Paper sx={{ p: 2, mb: 3 }}>\r\n          <Typography variant=\"subtitle2\" gutterBottom>\r\n            Filter Results\r\n          </Typography>\r\n          <Grid container spacing={2}>\r\n            <Grid item xs={12} sm={4}>\r\n              <FormControl size=\"small\" fullWidth>\r\n                <InputLabel>Category</InputLabel>\r\n                <Select\r\n                  value={filterCategory}\r\n                  label=\"Category\"\r\n                  onChange={(e) => setFilterCategory(e.target.value)}\r\n                >\r\n                  <MenuItem value=\"all\">All Categories</MenuItem>\r\n                  {Object.keys(TEST_CATEGORIES).map(category => (\r\n                    <MenuItem key={category} value={category}>{category}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <FormControl size=\"small\" fullWidth>\r\n                <InputLabel>Status</InputLabel>\r\n                <Select\r\n                  value={filterStatus}\r\n                  label=\"Status\"\r\n                  onChange={(e) => setFilterStatus(e.target.value)}\r\n                >\r\n                  <MenuItem value=\"all\">All</MenuItem>\r\n                  <MenuItem value=\"passed\">Passed</MenuItem>\r\n                  <MenuItem value=\"failed\">Failed</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item xs={12} sm={4}>\r\n              <FormControl size=\"small\" fullWidth>\r\n                <InputLabel>Severity</InputLabel>\r\n                <Select\r\n                  value={filterSeverity}\r\n                  label=\"Severity\"\r\n                  onChange={(e) => setFilterSeverity(e.target.value)}\r\n                >\r\n                  <MenuItem value=\"all\">All Severities</MenuItem>\r\n                  <MenuItem value=\"critical\">Critical</MenuItem>\r\n                  <MenuItem value=\"high\">High</MenuItem>\r\n                  <MenuItem value=\"medium\">Medium</MenuItem>\r\n                  <MenuItem value=\"low\">Low</MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n          </Grid>\r\n        </Paper>\r\n        \r\n        <TestResultTable \r\n          results={testResults}\r\n          filters={{\r\n            category: filterCategory,\r\n            status: filterStatus,\r\n            severity: filterSeverity\r\n          }}\r\n        />\r\n        \r\n        <Menu\r\n          anchorEl={menuAnchorEl}\r\n          open={Boolean(menuAnchorEl)}\r\n          onClose={handleMenuClose}\r\n        >\r\n          <MenuItem onClick={handleMenuClose}>\r\n            <ListItemIcon>\r\n              <BarChartIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText>View Details</ListItemText>\r\n          </MenuItem>\r\n          <MenuItem onClick={handleMenuClose}>\r\n            <ListItemIcon>\r\n              <FileCopyIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText>Copy Results</ListItemText>\r\n          </MenuItem>\r\n          <MenuItem onClick={handleMenuClose}>\r\n            <ListItemIcon>\r\n              <DescriptionIcon fontSize=\"small\" />\r\n            </ListItemIcon>\r\n            <ListItemText>Generate Report</ListItemText>\r\n          </MenuItem>\r\n        </Menu>\r\n      </Box>\r\n    );\r\n  };\r\n  \r\n  // Export Options Tab Content\r\n  const renderExportTab = () => {\r\n    const exportFormats = ['PDF', 'HTML', 'JSON', 'CSV'];\r\n    const reportTypes = [\r\n      'Full Compliance Report', \r\n      'Executive Summary', \r\n      'Technical Details', \r\n      'Regulatory Evidence'\r\n    ];\r\n    \r\n    return (\r\n      <Box>\r\n        <Paper sx={{ p: 3, mb: 4 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Export Report\r\n          </Typography>\r\n          \r\n          <Grid container spacing={3}>\r\n            <Grid item xs={12} sm={6}>\r\n              <FormControl fullWidth sx={{ mb: 3 }}>\r\n                <InputLabel>Report Type</InputLabel>\r\n                <Select\r\n                  value={exportType}\r\n                  label=\"Report Type\"\r\n                  onChange={(e) => setExportType(e.target.value)}\r\n                >\r\n                  {reportTypes.map(type => (\r\n                    <MenuItem key={type} value={type}>{type}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              \r\n              <FormControl fullWidth>\r\n                <InputLabel>Format</InputLabel>\r\n                <Select\r\n                  value={exportFormat}\r\n                  label=\"Format\"\r\n                  onChange={(e) => setExportFormat(e.target.value)}\r\n                >\r\n                  {exportFormats.map(format => (\r\n                    <MenuItem key={format} value={format}>{format}</MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            \r\n            <Grid item xs={12} sm={6}>\r\n              <Typography variant=\"subtitle2\" gutterBottom>\r\n                Include in Report\r\n              </Typography>\r\n              <FormGroup>\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox \r\n                      checked={exportOptions.testDetails} \r\n                      onChange={() => handleExportOptionChange('testDetails')} \r\n                    />\r\n                  }\r\n                  label=\"Test Details\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox \r\n                      checked={exportOptions.remediationSuggestions} \r\n                      onChange={() => handleExportOptionChange('remediationSuggestions')} \r\n                    />\r\n                  }\r\n                  label=\"Remediation Suggestions\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox \r\n                      checked={exportOptions.screenshots} \r\n                      onChange={() => handleExportOptionChange('screenshots')} \r\n                    />\r\n                  }\r\n                  label=\"Screenshots\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox \r\n                      checked={exportOptions.apiLogs} \r\n                      onChange={() => handleExportOptionChange('apiLogs')} \r\n                    />\r\n                  }\r\n                  label=\"API Logs\"\r\n                />\r\n                <FormControlLabel\r\n                  control={\r\n                    <Checkbox \r\n                      checked={exportOptions.configSettings} \r\n                      onChange={() => handleExportOptionChange('configSettings')} \r\n                    />\r\n                  }\r\n                  label=\"Configuration Settings\"\r\n                />\r\n              </FormGroup>\r\n            </Grid>\r\n          </Grid>\r\n          \r\n          <Box sx={{ display: 'flex', justifyContent: 'center', mt: 3 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              startIcon={exportFormat === 'PDF' ? <PictureAsPdfIcon /> : <GetAppIcon />}\r\n              onClick={openExportDialog}\r\n              disabled={!hasResults}\r\n              sx={{ minWidth: 200 }}\r\n            >\r\n              Generate Report\r\n            </Button>\r\n          </Box>\r\n        </Paper>\r\n        \r\n        <Paper sx={{ p: 3 }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Available Reports\r\n          </Typography>\r\n          \r\n          {!hasResults ? (\r\n            <Box sx={{ textAlign: 'center', py: 3 }}>\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                No test results available to generate reports.\r\n              </Typography>\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={() => navigate('/run-tests')}\r\n                sx={{ mt: 2 }}\r\n              >\r\n                Go to Run Tests\r\n              </Button>\r\n            </Box>\r\n          ) : (\r\n            <Box sx={{ overflowX: 'auto' }}>\r\n              <table style={{ width: '100%', borderCollapse: 'collapse' }}>\r\n                <thead>\r\n                  <tr style={{ borderBottom: '1px solid rgba(0,0,0,0.12)' }}>\r\n                    <th style={{ textAlign: 'left', padding: '12px 16px' }}>Report Name</th>\r\n                    <th style={{ textAlign: 'left', padding: '12px 16px' }}>Type</th>\r\n                    <th style={{ textAlign: 'left', padding: '12px 16px' }}>Format</th>\r\n                    <th style={{ textAlign: 'left', padding: '12px 16px' }}>Date</th>\r\n                    <th style={{ textAlign: 'left', padding: '12px 16px' }}>Actions</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  <tr style={{ borderBottom: '1px solid rgba(0,0,0,0.06)' }}>\r\n                    <td style={{ padding: '12px 16px' }}>AI Compliance Report</td>\r\n                    <td style={{ padding: '12px 16px' }}>Full Compliance Report</td>\r\n                    <td style={{ padding: '12px 16px' }}>PDF</td>\r\n                    <td style={{ padding: '12px 16px' }}>{new Date().toLocaleDateString()}</td>\r\n                    <td style={{ padding: '12px 16px' }}>\r\n                      <Button\r\n                        startIcon={<GetAppIcon />}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ borderBottom: '1px solid rgba(0,0,0,0.06)' }}>\r\n                    <td style={{ padding: '12px 16px' }}>Executive Summary</td>\r\n                    <td style={{ padding: '12px 16px' }}>Executive Summary</td>\r\n                    <td style={{ padding: '12px 16px' }}>PDF</td>\r\n                    <td style={{ padding: '12px 16px' }}>{new Date().toLocaleDateString()}</td>\r\n                    <td style={{ padding: '12px 16px' }}>\r\n                      <Button\r\n                        startIcon={<GetAppIcon />}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                  <tr style={{ borderBottom: '1px solid rgba(0,0,0,0.06)' }}>\r\n                    <td style={{ padding: '12px 16px' }}>Technical Details</td>\r\n                    <td style={{ padding: '12px 16px' }}>Technical Details</td>\r\n                    <td style={{ padding: '12px 16px' }}>JSON</td>\r\n                    <td style={{ padding: '12px 16px' }}>{new Date().toLocaleDateString()}</td>\r\n                    <td style={{ padding: '12px 16px' }}>\r\n                      <Button\r\n                        startIcon={<GetAppIcon />}\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                      >\r\n                        Download\r\n                      </Button>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </Box>\r\n          )}\r\n        </Paper>\r\n        \r\n        {/* Export Dialog */}\r\n        <Dialog\r\n          open={exportDialogOpen}\r\n          onClose={!exporting ? closeExportDialog : undefined}\r\n          maxWidth=\"sm\"\r\n          fullWidth\r\n        >\r\n          <DialogTitle>\r\n            Generating {exportType}\r\n          </DialogTitle>\r\n          <DialogContent dividers>\r\n            {exporting ? (\r\n              <Box sx={{ textAlign: 'center', py: 2 }}>\r\n                <CircularProgress size={60} />\r\n                <Typography sx={{ mt: 2 }}>\r\n                  Generating report... {exportProgress}%\r\n                </Typography>\r\n                <Box sx={{ width: '100%', mt: 2 }}>\r\n                  <Box sx={{ \r\n                    width: '100%', \r\n                    height: 10, \r\n                    borderRadius: 1, \r\n                    bgcolor: 'rgba(0,0,0,0.1)',\r\n                    overflow: 'hidden'\r\n                  }}>\r\n                    <Box sx={{ \r\n                      width: `${exportProgress}%`, \r\n                      height: '100%', \r\n                      bgcolor: 'primary.main',\r\n                      transition: 'width 0.3s ease-in-out'\r\n                    }} />\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            ) : (\r\n              <Box>\r\n                <Typography variant=\"subtitle1\" gutterBottom>\r\n                  You are about to generate:\r\n                </Typography>\r\n                <Box sx={{ pl: 2 }}>\r\n                  <Typography variant=\"body1\">\r\n                    • <strong>Report Type:</strong> {exportType}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    • <strong>Format:</strong> {exportFormat}\r\n                  </Typography>\r\n                  <Typography variant=\"body1\">\r\n                    • <strong>Includes:</strong> {Object.entries(exportOptions)\r\n                      .filter(([_, value]) => value)\r\n                      .map(([key]) => key.replace(/([A-Z])/g, ' $1').trim())\r\n                      .join(', ')}\r\n                  </Typography>\r\n                </Box>\r\n                <Typography variant=\"body2\" color=\"textSecondary\" sx={{ mt: 2 }}>\r\n                  This report will contain compliance results for your model, providing detailed insights into the test outcomes.\r\n                </Typography>\r\n              </Box>\r\n            )}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            {!exporting && <Button onClick={closeExportDialog}>Cancel</Button>}\r\n            {!exporting && (\r\n              <Button \r\n                variant=\"contained\" \r\n                color=\"primary\" \r\n                onClick={handleGenerateReport}\r\n                startIcon={exportFormat === 'PDF' ? <PictureAsPdfIcon /> : <GetAppIcon />}\r\n              >\r\n                Generate\r\n              </Button>\r\n            )}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </Box>\r\n    );\r\n  };\r\n  \r\n  // If no tests selected, show warning\r\n  if (!selectedTests || selectedTests.length === 0) {\r\n    return (\r\n      <Container maxWidth=\"lg\">\r\n        <Typography variant=\"h4\" gutterBottom>\r\n          Compliance Results Dashboard\r\n        </Typography>\r\n        <Alert severity=\"warning\" sx={{ mb: 3 }}>\r\n          No tests have been selected yet. Please configure and run tests to see results.\r\n        </Alert>\r\n        <Button \r\n          variant=\"contained\" \r\n          color=\"primary\" \r\n          onClick={() => navigate('/test-config')}\r\n        >\r\n          Go to Test Configuration\r\n        </Button>\r\n      </Container>\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Box sx={{ mb: 3, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }}>\r\n        <Typography variant=\"h4\">\r\n          Compliance Results Dashboard\r\n        </Typography>\r\n        \r\n        <Box>\r\n          <Button\r\n            variant=\"outlined\"\r\n            onClick={() => navigate('/run-tests')}\r\n            startIcon={<RestartAltIcon />}\r\n            sx={{ mr: 1 }}\r\n          >\r\n            Run Tests Again\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<GetAppIcon />}\r\n            onClick={openExportDialog}\r\n            disabled={!hasResults}\r\n          >\r\n            Export\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n      \r\n      <Paper sx={{ mb: 3 }}>\r\n        <Tabs \r\n          value={currentTab} \r\n          onChange={handleTabChange}\r\n          variant=\"fullWidth\"\r\n          indicatorColor=\"primary\"\r\n          textColor=\"primary\"\r\n        >\r\n          <Tab label=\"Summary\" id=\"tab-0\" />\r\n          <Tab label=\"Results by Category\" id=\"tab-1\" />\r\n          <Tab label=\"Detailed Results\" id=\"tab-2\" />\r\n          <Tab label=\"Export Report\" id=\"tab-3\" />\r\n        </Tabs>\r\n      </Paper>\r\n      \r\n      <Box role=\"tabpanel\" hidden={currentTab !== 0} id=\"tabpanel-0\">\r\n        {currentTab === 0 && renderSummaryTab()}\r\n      </Box>\r\n      \r\n      <Box role=\"tabpanel\" hidden={currentTab !== 1} id=\"tabpanel-1\">\r\n        {currentTab === 1 && renderCategoryTab()}\r\n      </Box>\r\n      \r\n      <Box role=\"tabpanel\" hidden={currentTab !== 2} id=\"tabpanel-2\">\r\n        {currentTab === 2 && renderDetailedTab()}\r\n      </Box>\r\n      \r\n      <Box role=\"tabpanel\" hidden={currentTab !== 3} id=\"tabpanel-3\">\r\n        {currentTab === 3 && renderExportTab()}\r\n      </Box>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ResultsPage;"],"names":["AccordionContext","React.createContext","getAccordionUtilityClass","slot","generateUtilityClass","accordionClasses","generateUtilityClasses","useUtilityClasses","ownerState","classes","square","expanded","disabled","disableGutters","composeClasses","AccordionRoot","styled","Paper","props","styles","memoTheme","theme","transition","AccordionHeading","Accordion","React.forwardRef","inProps","ref","useDefaultProps","childrenProp","className","defaultExpanded","expandedProp","onChange","slots","slotProps","TransitionComponentProp","TransitionPropsProp","other","setExpandedState","useControlled","handleChange","React.useCallback","event","summary","children","React.Children","contextValue","React.useMemo","backwardCompatibleSlots","backwardCompatibleSlotProps","externalForwardedProps","AccordionHeadingSlot","accordionProps","useSlot","TransitionSlot","transitionProps","Collapse","clsx","_jsx","getAccordionDetailsUtilityClass","AccordionDetailsRoot","AccordionDetails","getAccordionSummaryUtilityClass","accordionSummaryClasses","AccordionSummaryRoot","ButtonBase","AccordionSummaryContent","AccordionSummaryExpandIconWrapper","AccordionSummary","expandIcon","focusVisibleClassName","onClick","toggle","React.useContext","ExpandMoreIcon","createSvgIcon","PictureAsPdfIcon","GetAppIcon","FileCopyIcon","InsightsIcon","BugReportIcon","formatTimestamp","timestamp","error","TestResultRow","item","open","setOpen","useState","jsxs","Fragment","TableRow","jsx","TableCell","IconButton","KeyboardArrowUpIcon","KeyboardArrowDownIcon","CategoryChip","SeverityChip","StatusChip","ComplianceScoreGauge","Box","Typography","WarningIcon","rec","idx","key","value","Chip","TestResultTable","results","filters","filteredResults","isPassed","TableContainer","Table","TableHead","TableBody","ResultsPage","navigate","useNavigate","testResults","complianceScores","selectedTests","useAppContext","currentTab","setCurrentTab","categoryExpanded","setCategoryExpanded","exportDialogOpen","setExportDialogOpen","exportFormat","setExportFormat","exportType","setExportType","exportOptions","setExportOptions","exportProgress","setExportProgress","exporting","setExporting","menuAnchorEl","setMenuAnchorEl","filterCategory","setFilterCategory","filterStatus","setFilterStatus","filterSeverity","setFilterSeverity","handleMenuClose","handleTabChange","newValue","toggleCategoryExpanded","category","prev","openExportDialog","closeExportDialog","handleGenerateReport","progress","interval","handleExportOptionChange","option","overallScore","totalPassed","sum","score","totalTests","hasResults","stats","total","passed","result","renderSummaryTab","Grid","Card","CardContent","scores","categoryScore","TEST_CATEGORIES","ProgressBar","Divider","lowestCategory","lowest","Button","renderCategoryTab","resultsByCategory","acc","totalInCategory","passedInCategory","index","renderDetailedTab","FormControl","InputLabel","Select","e","MenuItem","Menu","ListItemIcon","BarChartIcon","ListItemText","DescriptionIcon","renderExportTab","exportFormats","reportTypes","type","format","FormGroup","FormControlLabel","Checkbox","Dialog","DialogTitle","DialogContent","CircularProgress","_","DialogActions","Container","Alert","RestartAltIcon","Tabs","Tab"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12]}