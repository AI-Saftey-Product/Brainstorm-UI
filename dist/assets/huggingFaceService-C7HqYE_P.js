const c="https://api-inference.huggingface.co/models/",n="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",p=async e=>{try{return await l(e,"Hello, world!"),{modelId:e,query:async a=>await l(e,a),getInfo:async()=>({id:e,name:e.includes("/")?e.split("/")[1]:e,provider:"huggingface"})}}catch(a){throw console.error(`Error initializing Hugging Face model ${e}:`,a),new Error(`Failed to initialize model ${e}: ${a.message}`)}},l=async(e,a)=>{try{const t=await fetch(`${c}${e}`,{method:"POST",headers:{Authorization:`Bearer ${n}`,"Content-Type":"application/json"},body:JSON.stringify({inputs:a})});if(!t.ok){const r=await t.json().catch(()=>({}));throw new Error(`API request failed: ${t.status} ${t.statusText} - ${r.error||""}`)}return await t.json()}catch(t){throw console.error(`Error querying model ${e}:`,t),t}},u=async e=>{const a=e.modelId||h(e.modelType,e.modelCategory);try{console.log(`Initializing Hugging Face model: ${a}`);const t=await fetch(`${c}${a}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({inputs:"Hello, testing model connectivity"})});if(!t.ok){const i=await t.json().catch(()=>({}));throw new Error(`Failed to initialize model: ${t.status} ${t.statusText} - ${i.error||""}`)}return{modelType:e.modelType,modelId:a,source:"huggingface",getPrediction:async i=>{try{const r=await fetch(`${c}${a}`,{method:"POST",headers:{"Content-Type":"application/json",Authorization:`Bearer ${n}`},body:JSON.stringify({inputs:i})});if(!r.ok)throw new Error(`Error from Hugging Face API: ${r.statusText}`);const o=await r.json();return d(o,e.modelType)}catch(r){throw console.error("Error calling Hugging Face API:",r),r}},getModelInfo:()=>({name:a,type:e.modelType||"huggingface",category:e.modelCategory||"text",parameters:e.parameters||{}})}}catch(t){throw console.error(`Error initializing Hugging Face model ${a}:`,t),t}},d=(e,a)=>{var t,i,r,o,s,g;switch(a){case"Text Classification":return{prediction:e,confidence:((t=e[0])==null?void 0:t.score)||0,classification:((i=e[0])==null?void 0:i.label)||""};case"Image Classification":return{prediction:e,confidence:((r=e[0])==null?void 0:r.score)||0,classification:((o=e[0])==null?void 0:o.label)||""};case"Text Generation":return{prediction:((s=e[0])==null?void 0:s.generated_text)||e,confidence:.9};default:return{prediction:e,confidence:Array.isArray(e)&&((g=e[0])==null?void 0:g.score)||.5}}},h=(e,a)=>{const t={"Text Classification":"distilbert-base-uncased-finetuned-sst-2-english","Token Classification":"dbmdz/bert-large-cased-finetuned-conll03-english","Question Answering":"distilbert-base-cased-distilled-squad","Zero-Shot Classification":"facebook/bart-large-mnli",Translation:"Helsinki-NLP/opus-mt-en-fr",Summarization:"facebook/bart-large-cnn","Text Generation":"gpt2","Image Classification":"google/vit-base-patch16-224","Object Detection":"facebook/detr-resnet-50","Image Segmentation":"facebook/detr-resnet-50-panoptic","Audio Classification":"superb/hubert-large-superb-er","Automatic Speech Recognition":"facebook/wav2vec2-base-960h",DEFAULT_NLP:"distilbert-base-uncased",DEFAULT_Vision:"google/vit-base-patch16-224",DEFAULT_Audio:"facebook/wav2vec2-base-960h",DEFAULT_Multimodal:"openai/clip-vit-base-patch32",DEFAULT_Tabular:"distilbert-base-uncased"};return t[e]||t[`DEFAULT_${a}`]||"distilbert-base-uncased"},f={getHuggingFaceModelAdapter:u};export{p as g,f as h};
//# sourceMappingURL=huggingFaceService-C7HqYE_P.js.map
